---
name: Hybrasyl packaging and testing

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    environment: deploy
    container:
      image: public.ecr.aws/l6u7z4o9/hybrasyl:build-latest
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    strategy:
      matrix:
        dotnet-version: ['7.0.x']

    STEPS:
      - name: Check out ceridwen (test data)
        uses: actions/checkout@v3
        with:
          repository: hybrasyl/ceridwen
          path: ceridwen
      - name: Check out server
        uses: actions/checkout@v3
        with:
          path: server
      - name: test
        run: echo $GITHUB_WORKSPACE
      - name: set safe dirs
        run: git config --global --add safe.directory $GITHUB_WORKSPACE/server/server
      - name: config
        run: >
          echo "{ \"WorldDataDirectory\": \"$GITHUB_WORKSPACE/server/ceridwen/xml\",
          \"LogDataDirectory\": \"$GITHUB_WORKSPACE/server/ceridwen/logs\",
          \"DataDirectory\": \"$GITHUB_WORKSPACE/server/ceridwen\"}"
          > Hybrasyl.Tests/hybrasyltest-settings.json
        shell: bash
      - name: show config
        run: cat Hybrasyl.Tests/hybrasyltest-settings.json
      - name: Install nuget dependencies
        run: cd $GITHUB_WORKSPACE/server/server && dotnet restore
      - name: build & run tests
        run: >
          cd $GITHUB_WORKSPACE/server/server/Hybrasyl.Tests && dotnet test --no-restore
          --verbosity normal --collect:"XPlat Code Coverage"
        env:
          REDIS_HOST: localhost
          REDIS_PORT: 6379
      - name: Codecov
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: true
          verbose: true
      - name: Publish Win64
        run: dotnet publish -c Release -r win10-x64
      - name: Publish Linux
        run: dotnet publish -c Release -r ubuntu.18.04-x64
      - name: Publish MacOS
        run: dotnet publish -c Release -r osx-x64
