/*
 * This file is part of Project Hybrasyl.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the Affero General Public License as published by
 * the Free Software Foundation, version 3.
 *
 * This program is distributed in the hope that it will be useful, but
 * without ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the Affero General Public License
 * for more details.
 *
 * You should have received a copy of the Affero General Public License along
 * with this program. If not, see <http://www.gnu.org/licenses/>.
 *
 * (C) 2020 ERISCO, LLC 
 *
 * For contributors and individual authors please refer to CONTRIBUTORS.MD.
 * 
 */

using System.Collections.Generic;
using App.Metrics;
using App.Metrics.Gauge;
using App.Metrics.Meter;
using App.Metrics.Timer;

// THIS FILE IS AUTOGENERATED. CHANGES WILL NOT BE SAVED OR REFLECTED.
// Please look at the T4 template "metricsregistry.tt".

namespace Hybrasyl;

public static class HybrasylMetricsRegistry
{
    public static Dictionary<int, TimerOptions> ControlMessageTimerIndex = new()
    {
        { 0, ControlMessage_CleanupUser },
        { 1, ControlMessage_SaveUser },
        { 2, ControlMessage_ChaosRising },
        { 3, ControlMessage_ShutdownServer },
        { 4, ControlMessage_RegenUser },
        { 5, ControlMessage_LogoffUser },
        { 6, ControlMessage_MailNotifyUser },
        { 7, ControlMessage_StatusTick },
        { 8, ControlMessage_MonolithSpawn },
        { 9, ControlMessage_MonolithControl },
        { 10, ControlMessage_TriggerRefresh },
        { 11, ControlMessage_HandleDeath },
        { 12, ControlMessage_DialogRequest },
        { 13, null },
        { 14, null },
        { 15, null },
        { 16, null }
    };

    public static Dictionary<byte, TimerOptions> OpcodeTimerIndex = new()
    {
        { 0, null },
        { 1, null },
        { 2, null },
        { 3, null },
        { 4, null },
        { 5, Opcode_RequestMap },
        { 6, Opcode_Walk },
        { 7, Opcode_PickupItem },
        { 8, Opcode_DropItem },
        { 9, null },
        { 10, null },
        { 11, Opcode_ClientExit },
        { 12, null },
        { 13, null },
        { 14, Opcode_Talk },
        { 15, Opcode_UseSpell },
        { 16, Opcode_ClientJoin },
        { 17, Opcode_Turn },
        { 18, null },
        { 19, Opcode_Attack },
        { 20, null },
        { 21, null },
        { 22, null },
        { 23, null },
        { 24, Opcode_ShowPlayerList },
        { 25, Opcode_Whisper },
        { 26, null },
        { 27, Opcode_Settings },
        { 28, Opcode_UseItem },
        { 29, Opcode_Emote },
        { 30, null },
        { 31, null },
        { 32, null },
        { 33, null },
        { 34, null },
        { 35, null },
        { 36, Opcode_DropGold },
        { 37, null },
        { 38, null },
        { 39, null },
        { 40, null },
        { 41, Opcode_DropItemOnCreature },
        { 42, Opcode_DropGoldOnCreature },
        { 43, null },
        { 44, null },
        { 45, Opcode_PlayerInfo },
        { 46, Opcode_GroupRequest },
        { 47, Opcode_GroupToggle },
        { 48, Opcode_MoveUIElement },
        { 49, null },
        { 50, null },
        { 51, null },
        { 52, null },
        { 53, null },
        { 54, null },
        { 55, null },
        { 56, Opcode_Refresh },
        { 57, Opcode_NPCMainMenu },
        { 58, Opcode_DialogUse },
        { 59, Opcode_AccessMessages },
        { 60, null },
        { 61, null },
        { 62, Opcode_UseSkill },
        { 63, Opcode_MapPointClick },
        { 64, null },
        { 65, null },
        { 66, null },
        { 67, Opcode_PointClick },
        { 68, Opcode_EquippedItemClick },
        { 69, Opcode_ByteHeartbeat },
        { 70, null },
        { 71, Opcode_StatPoint },
        { 72, null },
        { 73, null },
        { 74, Opcode_Trade },
        { 75, null },
        { 76, null },
        { 77, Opcode_BeginCasting },
        { 78, Opcode_CastLine },
        { 79, Opcode_ProfileTextPortrait },
        { 80, null },
        { 81, null },
        { 82, null },
        { 83, null },
        { 84, null },
        { 85, null },
        { 86, null },
        { 87, null },
        { 88, null },
        { 89, null },
        { 90, null },
        { 91, null },
        { 92, null },
        { 93, null },
        { 94, null },
        { 95, null },
        { 96, null },
        { 97, null },
        { 98, null },
        { 99, null },
        { 100, null },
        { 101, null },
        { 102, null },
        { 103, null },
        { 104, null },
        { 105, null },
        { 106, null },
        { 107, null },
        { 108, null },
        { 109, null },
        { 110, null },
        { 111, null },
        { 112, null },
        { 113, null },
        { 114, null },
        { 115, null },
        { 116, null },
        { 117, Opcode_TickHeartbeat },
        { 118, null },
        { 119, null },
        { 120, null },
        { 121, Opcode_Status },
        { 122, null },
        { 123, Opcode_RequestMetafile },
        { 124, null },
        { 125, null },
        { 126, null },
        { 127, null },
        { 128, null },
        { 129, null },
        { 130, null },
        { 131, null },
        { 132, null },
        { 133, null },
        { 134, null },
        { 135, null },
        { 136, null },
        { 137, null },
        { 138, null },
        { 139, null },
        { 140, null },
        { 141, null },
        { 142, null },
        { 143, null },
        { 144, null },
        { 145, null },
        { 146, null },
        { 147, null },
        { 148, null },
        { 149, null },
        { 150, null },
        { 151, null },
        { 152, null },
        { 153, null },
        { 154, null },
        { 155, null },
        { 156, null },
        { 157, null },
        { 158, null },
        { 159, null },
        { 160, null },
        { 161, null },
        { 162, null },
        { 163, null },
        { 164, null },
        { 165, null },
        { 166, null },
        { 167, null },
        { 168, null },
        { 169, null },
        { 170, null },
        { 171, null },
        { 172, null },
        { 173, null },
        { 174, null },
        { 175, null },
        { 176, null },
        { 177, null },
        { 178, null },
        { 179, null },
        { 180, null },
        { 181, null },
        { 182, null },
        { 183, null },
        { 184, null },
        { 185, null },
        { 186, null },
        { 187, null },
        { 188, null },
        { 189, null },
        { 190, null },
        { 191, null },
        { 192, null },
        { 193, null },
        { 194, null },
        { 195, null },
        { 196, null },
        { 197, null },
        { 198, null },
        { 199, null },
        { 200, null },
        { 201, null },
        { 202, null },
        { 203, null },
        { 204, null },
        { 205, null },
        { 206, null },
        { 207, null },
        { 208, null },
        { 209, null },
        { 210, null },
        { 211, null },
        { 212, null },
        { 213, null },
        { 214, null },
        { 215, null },
        { 216, null },
        { 217, null },
        { 218, null },
        { 219, null },
        { 220, null },
        { 221, null },
        { 222, null },
        { 223, null },
        { 224, null },
        { 225, null },
        { 226, null },
        { 227, null },
        { 228, null },
        { 229, null },
        { 230, null },
        { 231, null },
        { 232, null },
        { 233, null },
        { 234, null },
        { 235, null },
        { 236, null },
        { 237, null },
        { 238, null },
        { 239, null },
        { 240, null },
        { 241, null },
        { 242, null },
        { 243, null },
        { 244, null },
        { 245, null },
        { 246, null },
        { 247, null },
        { 248, null },
        { 249, null },
        { 250, null },
        { 251, null },
        { 252, null },
        { 253, null },
        { 254, null },
        { 255, null }
    };

    public static MeterOptions ExceptionMeter => new()
    {
        Name = "Exception Rate",
        MeasurementUnit = Unit.Errors
    };

    public static GaugeOptions QueueDepth => new()
    {
        Name = "Queue Depth (Opcodes)",
        MeasurementUnit = Unit.Requests
    };

    public static GaugeOptions ControlQueueDepth => new()
    {
        Name = "Queue Depth (Control Messages)",
        MeasurementUnit = Unit.Requests
    };

    public static TimerOptions Opcode_RequestMap => new()
    {
        Name = "RequestMap Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_Walk => new()
    {
        Name = "Walk Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_PickupItem => new()
    {
        Name = "PickupItem Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_DropItem => new()
    {
        Name = "DropItem Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_ClientExit => new()
    {
        Name = "ClientExit Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_Talk => new()
    {
        Name = "Talk Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_UseSpell => new()
    {
        Name = "UseSpell Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_ClientJoin => new()
    {
        Name = "ClientJoin Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_Turn => new()
    {
        Name = "Turn Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_Attack => new()
    {
        Name = "Attack Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_ShowPlayerList => new()
    {
        Name = "ShowPlayerList Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_Whisper => new()
    {
        Name = "Whisper Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_Settings => new()
    {
        Name = "Settings Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_UseItem => new()
    {
        Name = "UseItem Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_Emote => new()
    {
        Name = "Emote Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_DropGold => new()
    {
        Name = "DropGold Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_DropItemOnCreature => new()
    {
        Name = "DropItemOnCreature Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_DropGoldOnCreature => new()
    {
        Name = "DropGoldOnCreature Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_PlayerInfo => new()
    {
        Name = "PlayerInfo Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_GroupRequest => new()
    {
        Name = "GroupRequest Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_GroupToggle => new()
    {
        Name = "GroupToggle Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_MoveUIElement => new()
    {
        Name = "MoveUIElement Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_Refresh => new()
    {
        Name = "Refresh Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_NPCMainMenu => new()
    {
        Name = "NPCMainMenu Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_DialogUse => new()
    {
        Name = "DialogUse Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_AccessMessages => new()
    {
        Name = "AccessMessages Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_UseSkill => new()
    {
        Name = "UseSkill Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_MapPointClick => new()
    {
        Name = "MapPointClick Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_PointClick => new()
    {
        Name = "PointClick Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_EquippedItemClick => new()
    {
        Name = "EquippedItemClick Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_ByteHeartbeat => new()
    {
        Name = "ByteHeartbeat Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_StatPoint => new()
    {
        Name = "StatPoint Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_Trade => new()
    {
        Name = "Trade Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_BeginCasting => new()
    {
        Name = "BeginCasting Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_CastLine => new()
    {
        Name = "CastLine Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_ProfileTextPortrait => new()
    {
        Name = "ProfileTextPortrait Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_TickHeartbeat => new()
    {
        Name = "TickHeartbeat Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_Status => new()
    {
        Name = "Status Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };

    public static TimerOptions Opcode_RequestMetafile => new()
    {
        Name = "RequestMetafile Packet",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };


    public static TimerOptions ControlMessage_CleanupUser => new()
    {
        Name = "CleanupUser Control Message",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };


    public static TimerOptions ControlMessage_SaveUser => new()
    {
        Name = "SaveUser Control Message",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };


    public static TimerOptions ControlMessage_ChaosRising => new()
    {
        Name = "ChaosRising Control Message",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };


    public static TimerOptions ControlMessage_ShutdownServer => new()
    {
        Name = "ShutdownServer Control Message",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };


    public static TimerOptions ControlMessage_RegenUser => new()
    {
        Name = "RegenUser Control Message",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };


    public static TimerOptions ControlMessage_LogoffUser => new()
    {
        Name = "LogoffUser Control Message",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };


    public static TimerOptions ControlMessage_MailNotifyUser => new()
    {
        Name = "MailNotifyUser Control Message",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };


    public static TimerOptions ControlMessage_StatusTick => new()
    {
        Name = "StatusTick Control Message",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };


    public static TimerOptions ControlMessage_MonolithSpawn => new()
    {
        Name = "MonolithSpawn Control Message",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };


    public static TimerOptions ControlMessage_MonolithControl => new()
    {
        Name = "MonolithControl Control Message",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };


    public static TimerOptions ControlMessage_TriggerRefresh => new()
    {
        Name = "TriggerRefresh Control Message",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };


    public static TimerOptions ControlMessage_HandleDeath => new()
    {
        Name = "HandleDeath Control Message",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };


    public static TimerOptions ControlMessage_DialogRequest => new()
    {
        Name = "DialogRequest Control Message",
        MeasurementUnit = Unit.Requests,
        DurationUnit = TimeUnit.Milliseconds,
        RateUnit = TimeUnit.Milliseconds
    };
}